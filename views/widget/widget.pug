#real_time_departures.container.transit-departures-widget
  .card.mx-auto.my-5
    .card-body
      h2= __('Realtime Departures')
      .mb-3
        .btn-group.btn-group-two(data-label="Lookup Type")  
          input#departure_type_stop_id.btn-check(type="radio" name="departure_type" value="stop" checked)
          label.btn.btn-outline-primary( for="departure_type_stop_id") By Stop
          input#departure_type_route.btn-check(type="radio" name="departure_type" value="route")
          label.btn.btn-outline-primary( for="departure_type_route") By Route

      form#stop_form
        .mb-3
          #departure_stop_code_container(data-placeholder=__('Search by stop name or stop code') data-stop-code-all=__('all'))

        .stop-code-invalid= __('Invalid stop code')  
        .d-grid
          button.btn.btn-primary(type="submit")= __('Get Departures')

      form#route_form.hidden-form
        .mb-3
          select.form-select#departure_route(name="route")
            option(value="")= __('Choose a route')
        
        .mb-3
          select.form-select#departure_direction(name="direction" disabled)
            option(value="")= __('Choose a direction')
        
        .mb-3
          select.form-select#departure_stop(name="stop" disabled)
            option(value="")= __('Choose a stop')

      #loading.loader #{__('Loading')}...

      #departure_results.departure-results
        .departure-results-header
          .departure-results-stop
          .departure-results-stop-unknown= __('Unknown Stop')
          button.departure-results-fetchtime(title=__('Refresh'))
            span #{__('As of')}&nbsp;
            span.departure-results-fetchtime-time
        .departure-results-stop-code-container
          span #{__('Stop Code')}&nbsp;
          span.departure-results-stop-code
        .departure-results-container(data-minutes-label=__('min'))
        .departure-results-none= __('No upcoming departures')
        .departure-results-error= __('Unable to fetch departures')

script.
  (async function() {
    const routes = await fetch('data/routes.json').then(res => res.json())
    const stops = await fetch('data/stops.json').then(res => res.json())
    setupTransitDeparturesWidget(routes, stops, {
      gtfsRtTripupdatesUrl: '#{config.agency.gtfs_rt_tripupdates_url}',
      refreshIntervalSeconds: #{config.refreshIntervalSeconds},
      timeFormat: '#{config.timeFormat}'
    })
  })()
